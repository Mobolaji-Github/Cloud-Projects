Parameters:
  RolePolicyName: 
    Type: String
    Default: root
  CodeRepoName: 
    Type: String 
  SNSEndPoint:
    Type: String 
    AllowedValues:
      - john.toriola.tj@gmail.com
      - badabolaji@gmail.com
      - jiesedo@gmail.com
      - bellnas09@gmail.com
      - olaoluikuesan@gmail.com
      - opeyemiprecious16@gmail.com 
      - collinsemmanuelojeh@gmail.com
      - akannibusayo@gmail.com
      - jibolashittubolu@gmail.com
      - jonebinter@gmail.com
      - sobolaudg@gmail.com
    Default: john.toriola.tj@gmail.com
  TopicName: 
    Type: String 
  BuildName: 
    Type: String
  

Resources:
  #Provisioned Roles Templates
  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: !Ref RolePolicyName
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                Resource:
                  - "*" 

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: !Ref RolePolicyName
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
                  - !GetAtt DeploymentBucket.Arn
                  - !Join ['', [!GetAtt DeploymentBucket.Arn, "/*"]]
              - 
                Effect: Allow  
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource:
                  - !GetAtt Build.Arn
                  - !Join ['', [!GetAtt Build.Arn, "/*"]]
              - 
                Effect: Allow  
                Action:
                  - "codeCommit:*"
                Resource: 
                  - !GetAtt Commit.Arn
                  - !Join ['', [!GetAtt Commit.Arn, "/*"]]
              - 
                Effect: Allow
                Action: 
                  - "sns:*"
                Resource: 
                  - !Join [':', ["arn:aws:sns", !Ref AWS::Region, !Ref AWS::AccountId, !Ref ApprovalTopic]]

  PipelineBucket: 
    Type: 'AWS::S3::Bucket'
    Properties: {}
  
  #Provisioned CodeCommit Template
  Commit: 
    Type: AWS::CodeCommit::Repository
    Properties: 
      RepositoryName: !Ref CodeRepoName

  #Provisioned CodeBuild Template 
  Build:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Ref BuildName
      ServiceRole: !Ref BuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
      ServiceRole: !GetAtt BuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          # Do not change version. This is the version of aws buildspec, not the version of your buldspec file.
          version: 0.2
          phases:
            pre_build:
              commands:
                #installs dependencies into the node_modules/ directory
                - npm install
            build:
              commands:
                - echo Build started on `date`
                - echo Compiling
                - npm run build
            post_build:
              commands:
                - echo Build completed on `date`
          # Include only the files required for your application to run.
          artifacts:
            files:
              - "**/*"
            discard-paths: no 
            base-directory: build

  #Provisioned SNS Topic Template  
  ApprovalTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref TopicName
      Subscription:
        - Endpoint: !Ref SNSEndPoint
          Protocol: email

  #Provisioned CodePipeline Template  
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      Stages:
        - 
          Name: Source
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              OutputArtifacts: 
                - Name: MyApp
              Configuration:
                RepositoryName: !Ref CodeRepoName
                BranchName: master
        - 
          Name: Build
          Actions: 
            - 
              Name: BuildAction
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts: 
                - Name: MyApp
              OutputArtifacts: 
                - Name: MyAppBuild
              Configuration:
                ProjectName: !Ref Build
        - 
          Name: Confirm
          Actions: 
            - 
              Name: ConfirmationAction
              ActionTypeId: 
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn: !Ref ApprovalTopic
        - 
          Name: Deploy
          Actions: 
            - 
              Name: DeployAction
              ActionTypeId: 
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              InputArtifacts: 
                - Name: MyAppBuild
              Configuration:
                BucketName: !Ref DeploymentBucket
                Extract: true
  
  DeploymentBucket:
    Type: 'AWS::S3::Bucket'
    Properties:  
      AccessControl: Private 
  
  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref DeploymentBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: 'Allow'
            Principal:
              Service: "cloudfront.amazonaws.com" 
            Sid: "AllowCloudFrontServicePrincipalReadOnly"
            Resource:
              - !Sub 'arn:aws:s3:::${DeploymentBucket}/*' 
            Condition:
              StringEquals:
                AWS:SourceArn: !Join [":", ["arn:aws:cloudfront:", !Ref AWS::AccountId, "distribution", !GetAtt Front.Id]]
          - 
            Sid: "Allow-Public-Access-To-Bucket"
            Effect: "Allow"
            Principal: "*"
            Action: "s3:GetObject"
            Resource: 
              - !Sub 'arn:aws:s3:::${DeploymentBucket}/*' 
            
  
  Front: 
    Type: AWS::CloudFront::Distribution
    Properties: 
      DistributionConfig: 
        Origins:
          - DomainName: !GetAtt DeploymentBucket.RegionalDomainName
            Id: AccessBucketOrigin
            OriginPath: ''
            S3OriginConfig:
              OriginAccessIdentity: ""
        Enabled: true 
        DefaultCacheBehavior:
          Compress: true 
          AllowedMethods:
            - GET
            - HEAD 
          CachedMethods:
            - GET 
            - HEAD
          TargetOriginId: AccessBucketOrigin
          ForwardedValues:
            Headers:
              - Origin
            Cookies:
              Forward: none
            QueryString: false 
          ViewerProtocolPolicy: 'redirect-to-https'
        DefaultRootObject: index.html
        HttpVersion: 'http1.1'
        IPV6Enabled: false
        PriceClass: 'PriceClass_All'
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: /index.html 
            ResponseCode: 200 
            ErrorCachingMinTTL: 60
          - ErrorCode: 404
            ResponsePagePath: /index.html 
            ResponseCode: 200 
            ErrorCachingMinTTL: 60